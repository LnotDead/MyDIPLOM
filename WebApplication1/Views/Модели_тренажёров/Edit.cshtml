@model WebApplication1.Models.Модели_тренажёров

@{
    ViewBag.Title = "Edit";
}

<h3>@WebApplication1.Models.Strings.Editing</h3>
<br />


@using (Html.BeginForm("Edit", "Модели_тренажёров", FormMethod.Post, new { enctype = "multipart/form-data" }))
// Без атрибута enctype браузер будет передавать только имя файла, а не его содержимое
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Модели тренажёров</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Начало_SN)

        <div class="form-group">
            @Html.LabelFor(model => model.Тип_тренажёра, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Тип_тренажёра, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Тип_тренажёра, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Название_линейки, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Название_линейки, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Название_линейки, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Название_модели, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Название_модели, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Название_модели, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Примечания, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Примечания, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Примечания, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.ImageData, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


                <div class="editor-label">
                </div>

                <div class="editor-field">
                    @if (Model.ImageData == null)
                    {
                        @:Отсутствует
                        }
                    else
                    {
                        @*<img width="150" height="150" src="@Url.Action("GetImage", "Модели_тренажёров", new { Model.Начало_SN })" />*@
                        <img height="150" src="@Url.Action("GetImage", "Модели_тренажёров", new { Model.Начало_SN })" />
                    }
                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="control-label col-md-2">
                <b>Загрузить новое фото</b>
            </div>
            <div class="col-md-10">
                <input type="file" name="Image" accept="image/*,image/jpeg"/>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@WebApplication1.Models.Strings.Save class="btn btn-default btn-yellow" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(WebApplication1.Models.Strings.Back_to_list, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
